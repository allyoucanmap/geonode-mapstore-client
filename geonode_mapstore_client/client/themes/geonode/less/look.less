
.write-gn-theme(@theme-vars) {

    .color-var(@theme-vars[body-color]);
    .background-color-var(@theme-vars[body-bg]);

    .btn-default {
        .button-variant-with-css-variables(@theme-vars[@button-default]);
    }

    .btn-primary {
        .button-variant-with-css-variables(@theme-vars[@button-primary]);
    }

    .btn:focus,
    .btn.focus {
        outline: 0;
        .box-shadow-var(@theme-vars[focus-color]);
    }

    .jumbotron {
        background-color: transparent;
    }

    .spinner {
        display: inline-flex;
        border-top-color: transparent;
        border-right-color: transparent;
        border-bottom-color: transparent;
        .border-left-color-var(@theme-vars[body-color]);
    }

    .gn-brand-navbar,
    .gn-details-panel,
    .gn-details-panel > *,
    .gn-footer,
    .gn-resource-card,
    .gn-filter-form,
    .gn-hero .gn-search-bar,
    .gn-card-options,
    .gn-search-bar,
    input,
    input:focus,
    .gn-suggestions,
    .gn-home-section .gn-card-grid,
    .dropdown-menu {
        .color-var(@theme-vars[body-color]);
        .background-color-var(@theme-vars[body-bg]);
    }

    .gn-main-home,
    .gn-card-grid,
    .gn-filters-menu {
        .color-var(@theme-vars[body-shade-color]);
        .background-color-var(@theme-vars[body-shade-bg]);
    }

    // default badge color
    .badge {
        .color-var(@theme-vars[badge-color]);
        .background-color-var(@theme-vars[badge-bg]);
    }

    .gn-action-navbar {
        .color-var(@theme-vars[primary-color]);
        .background-color-var(@theme-vars[primary-bg]);
        .badge {
            .color-var(@theme-vars[primary-bg]);
            .background-color-var(@theme-vars[primary-color]);
        }
        .dropdown-menu .badge {
            .color-var(@theme-vars[primary-color]);
            .background-color-var(@theme-vars[primary-bg]);
        }
    }
    .gn-menu-index-divider {
        .background-color-var(@theme-vars[primary-color]);
    }
    .gn-filter-form-divider {
        .background-color-var(@theme-vars[body-shade-bg]);
    }
    .gn-filter-by-extent-map,
    .gn-details-panel-preview,
    .gn-details-panel-preview-loader,
    .gn-resource-card .card-img-top,
    .gn-loader-placeholder {
        .color-var(@theme-vars[image-color]);
        .background-color-var(@theme-vars[image-bg]);
    }

    .gn-hero {
        .color-var(@theme-vars[jumbotron-color]);
        .background-color-var(@theme-vars[jumbotron-bg]);
    }

    a {
        .color-var(@theme-vars[link-color]);
        text-decoration: none;

        &:hover {
            .color-var(@theme-vars[link-hover-color]);
            text-decoration: none;
        }
    }

    .custom-control-input:checked~.custom-control-label::before {
        .color-var(@theme-vars[primary-color]);
        .background-color-var(@theme-vars[primary-bg]);
        .border-color-var(@theme-vars[primary-bg]);
    }

    .custom-switch .custom-control-input:checked~.custom-control-label::after {
        .background-color-var(@theme-vars[primary-color]);
    }

    .gn-action-navbar .gn-tag,
    .gn-action-navbar .btn-default {
        .btn-primary();
    }

    .gn-details-panel.loading .gn-details-panel-content {
        h1, a, p {
            color: transparent;
            .background-color-var(@theme-vars[placeholder-bg]);
        }
    }

    .gn-loader-placeholder .fa {
        .color-var(@theme-vars[body-bg]);
    }

    .gn-resource-card {
        .card-title a {
            .color-var(@theme-vars[body-color]);

            &:hover {
                text-decoration: underline;
            }
        }

        .gn-tag {
            .color-var(@theme-vars[body-color]);
            font-size: inherit;

            &:hover {
                color: inherit;
                background-color: transparent;
            }
        }

        &.active {
            .border-color-var(@theme-vars[focus-color]);
            .outline-color-var(@theme-vars[focus-color]);
        }

        &:hover {
            .border-color-var(@theme-vars[focus-color]);
        }
    }

    .gn-filter-link {
        a {
            .color-var(@theme-vars[body-color]);

            &:hover {
                text-decoration: underline;
            }
        }
    }

    .gn-search-bar {
        .border-color-var(@theme-vars[body-border-color]);

        &.focus {
            .outline-color-var(@theme-vars[focus-color]);
        }
    }

    .gn-tag {
        .color-var(@theme-vars[tag-color]);
        background-color: transparent;
        &.active {
            .color-var(@theme-vars[tag-active-color]);
            .background-color-var(@theme-vars[tag-active-bg]);
        }
        &:hover {
            .color-var(@theme-vars[tag-hover-color]);
            .background-color-var(@theme-vars[tag-hover-bg]);
        }
    }

    .gn-footer {
        .color-var(@theme-vars[footer-color]);
        .background-color-var(@theme-vars[footer-bg]);
        a {
            .color-var(@theme-vars[footer-link-color]);
            text-decoration: none;

            &:hover {
                .color-var(@theme-vars[footer-link-hover-color]);
                text-decoration: none;
            }
        }
    }

    .dropdown-item {
        .hover-focus() {
            .background-color-var(@theme-vars[body-shade-bg]);
            text-decoration: none;
        }

        &.active,
        &:active {
            .color-var(@theme-vars[primary-color]);
            .background-color-var(@theme-vars[primary-bg]);
            .hover-focus() {
                .color-var(@theme-vars[primary-color]);
                .background-color-var(@theme-vars[primary-bg]);
            }
        }
    }

    .list-group-item-action {
        .color-var(@theme-vars[body-color]);
        .background-color-var(@theme-vars[body-bg]);
        .hover-focus() {
            .color-var(@theme-vars[body-shade-color]);
            .background-color-var(@theme-vars[body-shade-bg]);
        }
        &:active {
            .color-var(@theme-vars[body-shade-color]);
            .background-color-var(@theme-vars[body-shade-bg]);
        }
    }

    .list-group-item {
        .color-var(@theme-vars[body-color]);
        .background-color-var(@theme-vars[body-bg]);
        .border-color-var(@theme-vars[body-border-color]);
        &.active {
            .color-var(@theme-vars[body-shade-color]);
            .background-color-var(@theme-vars[body-shade-bg]);
            .border-color-var(@theme-vars[body-border-color]);
        }
    }
    // needed to override the mapstore style of react-select
    // TODO: we should not import the mapstore one
    #container & {
        .react-select-theme-with-css-variables(@theme-vars);
    }
}
